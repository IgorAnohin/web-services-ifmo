
package ru.anokhin.jaxws.client;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "BookSoapServiceImplService", targetNamespace = "http://impl.service.jaxws.anokhin.ru/", wsdlLocation = "http://localhost:8080/BookService?wsdl")
public class BookSoapServiceImplService
        extends Service {

    private final static URL BOOKSOAPSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException BOOKSOAPSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName BOOKSOAPSERVICEIMPLSERVICE_QNAME = new QName("http://impl.service.jaxws.anokhin.ru/", "BookSoapServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/BookService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BOOKSOAPSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        BOOKSOAPSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public BookSoapServiceImplService() {
        super(__getWsdlLocation(), BOOKSOAPSERVICEIMPLSERVICE_QNAME);
    }

    public BookSoapServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), BOOKSOAPSERVICEIMPLSERVICE_QNAME, features);
    }

    public BookSoapServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, BOOKSOAPSERVICEIMPLSERVICE_QNAME);
    }

    public BookSoapServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BOOKSOAPSERVICEIMPLSERVICE_QNAME, features);
    }

    public BookSoapServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BookSoapServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns BookService
     */
    @WebEndpoint(name = "BookServicePort")
    public BookService getBookServicePort() {
        return super.getPort(new QName("http://impl.service.jaxws.anokhin.ru/", "BookServicePort"), BookService.class);
    }

    /**
     * @param features A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     *
     * @return returns BookService
     */
    @WebEndpoint(name = "BookServicePort")
    public BookService getBookServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.service.jaxws.anokhin.ru/", "BookServicePort"), BookService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BOOKSOAPSERVICEIMPLSERVICE_EXCEPTION != null) {
            throw BOOKSOAPSERVICEIMPLSERVICE_EXCEPTION;
        }
        return BOOKSOAPSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
